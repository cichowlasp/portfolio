---
import { Image } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import Github from '../assets/icons/github.svg';
import Info from '../assets/icons/info.svg';
import Website from '../assets/icons/website.svg';
import Button from './Button.astro';
import colors from 'tailwindcss/colors';

interface Props {
	title: string;
	link: string;
	icon?: ImageMetadata;
	alt?: string;
	text?: string;
	demo?: string;
}

const { title, link, icon, alt, text, demo } = Astro.props;
const id = title.split(' ')[0].toLowerCase();
---

<div
	class='relative bg-gray-200 py-4 px-6 min-h-64 min-w-64 w-64 h-64 gap-2 rounded-[20px]'
>
	<h4 class='font-bold text-lg mb-2'>{title}</h4>
	<div
		class='h-[calc(16rem-8.5rem)] max-h-[calc(16rem-8.5rem)] overflow-y-hidden text-ellipsis bg-gradient-to-b from-gray-900 to-gray-200 bg-clip-text text-transparent'
	>
		<slot />
	</div>
	<div
		class='absolute flex flex-row bottom-0 h-16 left-0 right-0 bg-gray-100 justify-around items-center border-gray-200 border-4 rounded-b-[20px]'
	>
		<a
			class='w-full h-full text-center flex justify-center items-center gap-2 font-semibold border-gray-200 border-r-2 hover:bg-gray-200 hover:rounded-bl-[15px]'
			target='_blank'
			href={link}
			><Image
				width={25}
				height={25}
				alt={alt ? alt : 'website link'}
				src={icon ? icon : Github}
			/>{text ? text : 'Github'}</a
		>
		<a
			class='w-full h-full text-center flex justify-center items-center gap-2 font-semibold border-gray-200 border-l-2 hover:bg-gray-200 hover:rounded-br-[15px]'
			href={demo ? demo : '#'}
			target='_blank'
			id={demo ? '' : title.split(' ')[0].toLowerCase()}
			><Image
				width={25}
				height={25}
				alt='informations'
				src={demo ? Website : Info}
			/>
			{demo ? 'Demo' : 'More'}
		</a>
	</div>
</div>
<div
	id={demo ? '' : title.split(' ')[0].toLowerCase()}
	class='hidden z-20 fixed top-0 bottom-0 left-0 right-0 bg-gray-900 bg-opacity-50'
>
	<div
		class='fixed top-8 bottom-8 left-8 right-8 bg-gray-100 rounded-3xl drop-shadow-sm p-8 pt-32 lg:px-64'
	>
		<Button
			id={'close-more' + title.split(' ')[0].toLowerCase()}
			button={false}
			class='bg-gray-200 mt-0 px-4 py-1 font-normal text-xl absolute right-4 top-4 z-30'
			simple={true}>&times;</Button
		>
		<h5 class='font-bold text-2xl mb-4'>{title}</h5>
		<p class='mb-8 max-w-full max-h-[calc(100%-10rem)] overflow-auto'>
			<slot />
		</p>
		<div
			class='absolute bottom-8 right-16 left-16 lg:right-64 lg:left-64 bg-gray-200 rounded-full mx-auto p-1 border-[1px] lg:w-128 border-gray-300 border-opacity-50 flex flex-row items-center gap-4 font-bold'
			'
		>
			<a
				href={link}
				class='flex flex-row bg-gray-900 w-full hover:bg-gray-700 text-gray-100 justify-center py-4 px-8 rounded-full gap-2'
			>
				<Image
					width={25}
					height={25}
					class='invert'
					alt={'website link'}
					src={Github}
				/>
				Github
			</a>
		</div>
	</div>

	<script type='module' define:vars={{ id }}>
		const buttons = document.querySelectorAll('a');
		const filteredButtons = [...buttons].filter(
			(el) => el.innerText === 'More'
		);
		filteredButtons.forEach((el) => {
			const closeBtn = document.querySelector('#close-more' + el.id);
			closeBtn.addEventListener('click', (event) => {
				event.preventDefault();
				const moreInfo = document.querySelector(
					'div[id=' + el.id + ']'
				);
				moreInfo.classList.replace('flex', 'hidden');
			});
			el.addEventListener('click', (event) => {
				event.preventDefault();
				const moreInfo = document.querySelector(
					'div[id=' + el.id + ']'
				);
				if (moreInfo.classList.contains('hidden')) {
					moreInfo.classList.replace('hidden', 'flex');
				} else {
					moreInfo.classList.replace('flex', 'hidden');
				}
			});
		});
	</script>
</div>
